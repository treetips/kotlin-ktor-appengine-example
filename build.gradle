buildscript {
  ext {
    sourceCompatibilityVersion = getProperty("sourceCompatibilityVersion")
    targetCompatibilityVersion = getProperty("targetCompatibilityVersion")
    kotlinVersion = getProperty("kotlinVersion")
    ktorVersion = getProperty("ktorVersion")
    appengineVersion = getProperty("appengineVersion")
    appengineGradlePluginVersion = getProperty("appengineGradlePluginVersion")
    gceLogbackVersion = getProperty("gceLogbackVersion")
    appengineDeployVersion = getProperty("appengineDeployVersion")
  }
  repositories {
    mavenCentral()
  }
  dependencies {
    classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
    classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}")
    classpath("com.google.cloud.tools:appengine-gradle-plugin:$appengineGradlePluginVersion")
  }
}

apply plugin: "idea"
apply plugin: "kotlin"
apply plugin: "war"
apply plugin: "com.google.cloud.tools.appengine"

sourceCompatibility = sourceCompatibilityVersion
targetCompatibility = targetCompatibilityVersion

compileKotlin {
  kotlinOptions {
    freeCompilerArgs = ["-Xjsr305=strict"]
    jvmTarget = sourceCompatibilityVersion
  }
}
compileTestKotlin {
  kotlinOptions {
    freeCompilerArgs = ["-Xjsr305=strict"]
    jvmTarget = sourceCompatibilityVersion
  }
}

repositories {
  jcenter()
  mavenCentral()
  maven { url "https://kotlin.bintray.com/ktor" }
}

dependencies {
  // ktor
  compile("io.ktor:ktor-server-core:$ktorVersion")
  compile("io.ktor:ktor-server-servlet:$ktorVersion")
  compile("io.ktor:ktor-jackson:$ktorVersion")
  // google appengine
  compile("com.google.cloud:google-cloud-logging-logback:${gceLogbackVersion}")
  providedCompile("com.google.appengine:appengine-api-1.0-sdk:${appengineVersion}")
  // kotlin
  implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8")
  implementation("org.jetbrains.kotlin:kotlin-reflect")
}

appengine {
  deploy {
    version = appengineDeployVersion
    stopPreviousVersion = true
    promote = false
  }
}
